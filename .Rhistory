colnames(data_an) <- index
colnames(data_an)
match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
sapply(data, function(x) {
Ref <- gsub("a|t|g|c", "", strsplit(x$Codons, "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x$Extra) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x$Codons, "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x$Extra) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x$cDNA_position, Alt, sep = "")
pr <- paste("p.", gsub("/", x$Protein_position, x$Amino_acids), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x$Gene))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1, function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
apply(data, 1, function(x) {
Ref <- gsub("a|t|g|c", "", strsplit(x$Codons, "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x$Extra) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x$Codons, "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x$Extra) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x$cDNA_position, Alt, sep = "")
pr <- paste("p.", gsub("/", x$Protein_position, x$Amino_acids), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x$Gene))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1, function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
apply(data, 1, function(x) {
Ref <- gsub("a|t|g|c", "", strsplit(x$Codons, "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x$Extra) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x$Codons, "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x$Extra) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x$cDNA_position, Alt, sep = "")
pr <- paste("p.", gsub("/", x$Protein_position, x$Amino_acids), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x$Gene))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1, function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
match("", colnames(data))
pr <- paste("p.", gsub("/", "", x[match("Protein_position", colnames(data))]), x[match("Amino_acids", colnames(data))]), sep = "")
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
x <- data[1,]
x
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
colnames(data)
x[match("Codons", colnames(data))]
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
x[match("Codons", colnames(data))]
strsplit(x[match("Codons", colnames(data))], "/")[[1]][1]
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", "", x[match("Protein_position", colnames(data))]), x[match("Amino_acids", colnames(data))]), sep = "")
pr <- paste("p.", gsub("/", "", x[match("Protein_position", colnames(data))]),
x[match("Amino_acids", colnames(data))], sep = "")
pr
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))]),
x[match("Amino_acids", colnames(data))]), sep = "")
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))]),
x[match("Amino_acids", colnames(data))]), sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
pr
am
tmp_refseq <- values[which(!is.na(match(values[, 2], x$Gene))), c(3, 1)]
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
tmp_refseq
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
data_an[1,]
data[1]
index <- c("Chr","Start","End","Ref","Alt","Func.refGene","Gene.refGene","GeneDetail.refGene","ExonicFunc.refGene","AAChange.refGene")
data_an <- matrix(ncol = length(index), nrow = nrow(data), ".")
colnames(data_an) <- index
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
data_an[1]
data_an[1,]
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
data[1,]
data[1,;1:10]
data[1,1:10]
data[1:10,]
View(data)
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
}
)
dim(data)
tmp <-<-
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
tmp <-
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
tmp[[1]]
length(tmp)
lapply(tmp, length)
unlist(lapply(tmp, length))
tmp[[6]]
data[6,]
x <- data[6,]
x <- as.character(x)
x
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref
Ref <- ifelse(grep("STRAND=1", x[match("Extra", colnames(data))]) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Ref
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
x[match("Extra", colnames(data))]
tolower(Ref)
match(tolower(Ref), trans_from)
trans_to[match(tolower(Ref), trans_from)]
grep("STRAND=1", x[match("Extra", colnames(data))]) == 1
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
tmp <- <-
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
tmp <-
apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
})
dim(tmp)
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
t(apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
}))
match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))
colnames(data_an) <- index
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
t(apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
}))
colnames(data_an)
colnames(data_an) <- index
index <- c("Chr","Start","End","Ref","Alt","Func.refGene","Gene.refGene","GeneDetail.refGene","ExonicFunc.refGene","AAChange.refGene")
data_an <- matrix(ncol = length(index), nrow = nrow(data), ".")
data_an
colnames(data_an) <- index
data_an[, match(c("Ref", "Alt", "AAChange.refGene"), colnames(data_an))] <-
t(apply(data, 1, function(x) {
x <- as.character(x)
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
}))
data_an[]
data[1,]
data_an[1,]
data_an[, match(c("Chr", "Start"), colnames(data_an))] <- t(sapply(data[, match("Location", colnames(data))], function(x) strsplit(x, ":")[[1]]))
data_an[, match("End", colnames(data_an))] <- data_an[, match("Start", colnames(data_an))]
data[, match("Consequence", colnames(data))]
data_an[, match("Func.refGene", colnames(data_an))] <- paste("exon nonsynonymous", data[, match("Consequence", colnames(data))])
paste("exon nonsynonymous", data[, match("Consequence", colnames(data))])
data_an[, match("Func.refGene", colnames(data_an))] <- paste("exon nonsynonymous", data[, match("Consequence", colnames(data))], sep = ",")
data_an[1,]
x <- as.character(x)
x
tmp <- strsplit(x[match("Location", colnames(data))], ":")[[1]]
tmp
End <- tmp[2]
values[,3]
tmp <- strsplit(x[match("Location", index], ":")[[1]]
Chr <- tmp[1]
Start <- tmp[2]
End <- tmp[2]
tmp <-  strsplit(x[match("Codons", index)], "/")[[1]]
Ref <- gsub("a|t|g|c", "", tmp)
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", index)])) == 1, Ref,
trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
Func.refGene <- "exon"
Gene.refGene <-
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
}))
tmp <-  strsplit(x[match("Codons", index)], "/")[[1]]
gsub("a|t|g|c", "", tmp)
x <- as.character(x)
tmp <- strsplit(x[match("Location", index], ":")[[1]]
Chr <- tmp[1]
Start <- tmp[2]
End <- tmp[2]
tmp <-  strsplit(x[match("Codons", index)], "/")[[1]]
Ref <- gsub("a|t|g|c", "", tmp)
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", index)])) == 1, Ref,
trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
Func.refGene <- "exon"
Gene.refGene <-
am <- paste("c.", Ref, x[match("cDNA_position", colnames(data))], Alt, sep = "")
pr <- paste("p.", gsub("/", x[match("Protein_position", colnames(data))],
x[match("Amino_acids", colnames(data))]), sep = "")
tmp_refseq <- values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), c(3, 1)]
if(is.null(tmp_refseq)) return("")
if(nrow(tmp_refseq) == 0) return("")
tmp_refseq <- tmp_refseq[tmp_refseq[, 2] != "",]
c(Ref, Alt, paste(apply2(tmp_refseq, 1,
function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ","))
}))
x <- as.character(x)
tmp <- strsplit(x[match("Location", index], ":")[[1]]
Chr <- tmp[1]
Start <- tmp[2]
End <- tmp[2]
tmp <-  strsplit(x[match("Codons", index)], "/")[[1]]
Ref <- gsub("a|t|g|c", "", tmp)
x <- as.character(x)
tmp <- strsplit(x[match("Location", index)], ":")[[1]]
Chr <- tmp[1]
Start <- tmp[2]
End <- tmp[2]
tmp <-  strsplit(x[match("Codons", index)], "/")[[1]]
tmp
strsplit(x[match("Codons", index)], "/")[[1]]
x
index
data_an <- matrix(ncol = length(index), nrow = nrow(data), ".")
colnames(data_an) <- index
data_an[, match("Gene.refGene", index)] <- values[,3]
x <- as.character(x)
tmp <- strsplit(x[match("Location", colnames(data))], ":")[[1]]
Chr <- tmp[1]
Start <- tmp[2]
End <- tmp[2]
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
Func.refGene <- "exon"
x
x[match("Gene", colnames(data))]
x <- as.character(x)
tmp <- strsplit(x[match("Location", colnames(data))], ":")[[1]]
Chr <- tmp[1]
Start <- tmp[2]
End <- tmp[2]
Ref <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][1])
Ref <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Ref, trans_to[match(tolower(Ref), trans_from)])
Alt <- gsub("a|t|g|c", "", strsplit(x[match("Codons", colnames(data))], "/")[[1]][2])
Alt <- ifelse(length(grep("STRAND=1", x[match("Extra", colnames(data))])) == 1, Alt, trans_to[match(tolower(Alt), trans_from)])
Func.refGene <- "exon"
x[match("Gene", colnames(data))]
match(values[, 3], x[match("Gene", colnames(data))])
values[which(!is.na(match(values[, 3], x[match("Gene", colnames(data))])))]
values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))])))]
values[1,]
values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))])))]
values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))),]
values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))),2]
values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))),3]
paste(unique(values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), 3]), collapse = ";")
paste(c(values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), 3]), collapse = ";")
paste(unique(values[which(!is.na(match(values[, 2], x[match("Gene", colnames(data))]))), 3]), collapse = ";")
AAChange.refGene <- paste(apply2(tmp_refseq, 1, function(y) paste(c(y, "exon_", am, pr), collapse = ":")), collapse = ",")
c(Chr, Start, End, Ref, Alt, Func.refGene, Gene.refGene, ExonicFunc.refGene, AAChange.refGene)
ExonicFunc.refGene <- "nonsynonymous"
c(Chr, Start, End, Ref, Alt, Func.refGene, Gene.refGene, ExonicFunc.refGene, AAChange.refGene)
c(Chr, Start, End, toupper(Ref), toupper(Alt), Func.refGene, Gene.refGene, ExonicFunc.refGene, AAChange.refGene)
trans_from <- c("a", "t", "g", "c")
trans_to <- c("t", "a", "c", "g")
tmp <- scan(vep_file, "character", sep = "\n", nlines = 200)
read_start <- grep("\\#uploaded_variation", tolower(tmp))[1]
if(is.na(read_start)) read_start <- rev(grep("\\#", tmp))[1] + 1
if(is.na(read_start)) read_start <- grep("chr", tolower(tmp))[1]
if(is.na(read_start)) read_start <- 1
print(paste("Please Confirm that Reading Start Line is", read_start))
print(tmp[read_start])
if(requireNamespace("data.table", quietly=TRUE)) {
data <- data.table::fread(vep_file, stringsAsFactors=FALSE, sep="\t", skip = read_start - 1, header =TRUE, data.table = FALSE)
} else {
index <- scan(vep_file, "character", sep = "\t", nlines = 1, skip = read_start - 1)
data  <- matrix(scan(vep_file, "character", sep = "\t", skip = read_start), ncol = length(index), byrow = TRUE)
colnames(data) <- index
}
index <- scan(vep_file, "character", sep = "\t", nlines = 1, skip = read_start - 1)
data  <- matrix(scan(vep_file, "character", sep = "\t", skip = read_start), ncol = length(index), byrow = TRUE)
index <- scan(vep_file, "character", sep = "\t", nlines = 1, skip = read_start - 1)
read_start
index <- scan(vep_file, "character", sep = "\t", nlines = 1, skip = read_start - 1)
data  <- matrix(scan(vep_file, "character", sep = "\t", skip = read_start), ncol = length(index), byrow = TRUE)
colnames(data) <- index
if(requireNamespace("data.table", quietly=TRUE)) {
data <- data.table::fread(vep_file, stringsAsFactors=FALSE, sep="\t", skip = read_start - 1, header =TRUE, data.table = FALSE)
} else {
index <- scan(vep_file, "character", sep = "\t", nlines = 1, skip = read_start - 1)
data  <- matrix(scan(vep_file, "character", sep = "\t", skip = read_start), ncol = length(index), byrow = TRUE)
colnames(data) <- index
}
read_vep_data <- function(vep_file){
tmp <- scan(vep_file, "character", sep = "\n", nlines = 200)
read_start <- grep("\\#uploaded_variation", tolower(tmp))[1]
if(is.na(read_start)) read_start <- rev(grep("\\#", tmp))[1] + 1
if(is.na(read_start)) read_start <- grep("chr", tolower(tmp))[1]
if(is.na(read_start)) read_start <- 1
print(paste("Please Confirm that Reading Start Line is", read_start))
print(tmp[read_start])
if(requireNamespace("data.table", quietly=TRUE)) {
data <- data.table::fread(vep_file, stringsAsFactors=FALSE, sep="\t", skip = read_start - 1, header =TRUE, data.table = FALSE)
} else {
index <- scan(vep_file, "character", sep = "\t", nlines = 1, skip = read_start - 1)
data  <- matrix(scan(vep_file, "character", sep = "\t", skip = read_start), ncol = length(index), byrow = TRUE)
colnames(data) <- index
}
}
data <- read_vep_data(vep_file)
trans_from <- c("a", "t", "g", "c")
trans_to   <- c("t", "a", "c", "g")
#Read vep data
data <- read_vep_data(vep_file)
data <- data[grep("missense_variant", data[, match("Consequence", colnames(data))]), ]
#Read vep data
data <- read_vep_data(vep_file)
vep_file
tmp <- scan(vep_file, "character", sep = "\n", nlines = 200)
read_start <- grep("\\#uploaded_variation", tolower(tmp))[1]
read_start
#Read vep data
data <- read_vep_data(vep_file)
#Make annovar format ata
index <- c("Chr","Start","End","Ref","Alt","Func.refGene","Gene.refGene","GeneDetail.refGene","ExonicFunc.refGene","AAChange.refGene")
data_an <- matrix(ncol = length(index), nrow = nrow(data), ".")
colnames(data_an) <- index
