% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MainSVFUSIONClass1.R
\name{MainSVFUSIONClass1}
\alias{MainSVFUSIONClass1}
\title{Calculate Neoantigen Candidates on SV fusions for MHC Class1}
\usage{
MainSVFUSIONClass1(
  input_file,
  hla_file = "here_is_a_table",
  hla_types = NA,
  file_name_in_hla_table = input_file,
  refflat_file = paste(hmdir, "lib/refFlat.txt", sep = "/"),
  refmrna_file = paste(hmdir, "lib/refMrna.fa", sep = "/"),
  hmdir = getwd(),
  job_id = "ID",
  export_dir = paste("result", job_id, "SV1", sep = "."),
  rnaexp_file = NA,
  rnabam_file = NA,
  cnv_file = NA,
  purity = 1,
  netMHCpan_dir = paste(hmdir, "lib/netMHCpan-4.0/netMHCpan", sep = "/"),
  refdna_file = NA,
  samtools_dir = NA,
  bcftools_dir = NA,
  chr_column = NA,
  mutation_start_column = NA,
  mutation_end_column = NA,
  mutation_ref_column = NA,
  mutation_alt_bnd_column = NA,
  depth_normal_column = NA,
  depth_tumor_column = NA,
  nm_id_column = NA,
  ambiguous_between_exon = 0,
  ambiguous_codon = 0,
  peptide_length = c(8, 9, 10, 11, 12, 13),
  gene_symbol_column = NA,
  mate_id_column = NA,
  ignore_short = TRUE
)
}
\arguments{
\item{input_file}{(Required) An input vcf file (BND format) annotated by,

e.g., ANNOVAR (http://annovar.openbioinformatics.org/en/latest/) or other softwares.

See by data(sample_sv_bnd); sample_sv_bnd;}

\item{hla_file}{A tab separated file indicating HLA types.
The 1st column is input_file name, and the following columns indicate HLA types.

See by data(sample_hla_table_c1); sample_hla_table_c1;}

\item{hla_types}{Set a list of HLA types}

\item{file_name_in_hla_table}{If the name (1st column) in HLA table is not the same as input_file, indicate the corresponding name (Default=input_file).}

\item{refflat_file}{refFlat file to be used in constructing peptide. (Default=paste(hmdir, "lib/refFlat.txt",sep="").

See "https://github.com/hase62/Neoantimon"}

\item{refmrna_file}{refMrna file to be used in constructing peptide (Default=paste(hmdir, "lib/refMrna.fa", sep="").

See "https://github.com/hase62/Neoantimon"}

\item{hmdir}{Home directory for the analysis (Default = getwd()).}

\item{job_id}{Job-Id to be attached in output files (Default = "NO_job_id").}

\item{export_dir}{The directory will be stored results (Default = "paste("result", file_name_in_hla_table, job_id, sep=".")")}

\item{rnaexp_file}{A file including RNA expressions (Default=NA).
The 1st, 2nd and 3rd columns are "GeneSymbol Chr:Exonstart-Exonend (locus) ExpressionAmount", respectively.
The 1st row should be any header.

See by data(sample_rna_exp); sample_rna_exp;}

\item{rnabam_file}{RNA bam file to calculate variant allele frequency of RNA at each mutation (Default=NA).}

\item{cnv_file}{A file including copy number variation to calculate cancer cell fraction probability (CCFP) (Default=NA).
The format is according to ASCAT output files.
The columns are "SNPName Chromosome Position LogR segmentedLogR BAF segmentedBAF CopyNumber MinorAllele RawCopyNumber"
The 1st row should be the above header.

See data(sample_copynum); sample_copynum;}

\item{purity}{Tumor purity or tumor contents ratio required to calculate CCFP (Default=1).}

\item{netMHCpan_dir}{The file directory to netMHCpan (Default="lib/netMHCpan-4.0/netMHCpan").}

\item{refdna_file}{refdna_file information to be used to calculate RNA VAF (Default=NA).

See "https://github.com/hase62/Neoantimon"}

\item{samtools_dir}{The file directory to samtools_0_x_x (Default="samtools").
It shouled be indicated when you indicate RNA-bam and try to calculate RNA VAF.}

\item{bcftools_dir}{The file directory to netMHCpan (Default="bcftools").
It shouled be indicated when you indicate RNA-bam and try to calculate RNA VAF.
samtools 0_x_x includes bcftools in the directory.}

\item{chr_column}{The column number describing chromosome number in input_file (Default=NA, but will automatically search "Chr" in header).}

\item{mutation_start_column}{The column number describing mutation start Position in input_file (Default=NA, but will automatically search "Start" in header) .}

\item{mutation_end_column}{The column number describing mutation end Position in input_file (Default=NA, but will automatically search "End" in header).}

\item{mutation_ref_column}{The column number describing mutation Ref in input_file (Default=NA, but will automatically search "Ref" in header).}

\item{mutation_alt_bnd_column}{The column number describing mutation Alt (BND format) in input_file (Default=NA, but will automatically search "Alt" in header).}

\item{depth_normal_column}{The column number describing the read count from normal cells (Default = NA).}

\item{depth_tumor_column}{The column number describing the read count from tumor cells (Default = NA).}

\item{nm_id_column}{(Required if gene_symbol_column = NA) The column number describing NM IDs in input_file such as

"SLCO1C1:NM_001145944:exon7:c.692_693insG:p.L231fs" (Default=NA).}

\item{ambiguous_between_exon}{The maximum number to permit the differences between Exon-Lengths from refFlat and refMrna (Default=0).}

\item{ambiguous_codon}{The maximum number to permit the differences between inputfile- and refMrna-oriented translation start/end position (Default=0).}

\item{peptide_length}{Peptide Length to be generated (Default = {8,9,10,11,12,13}).}

\item{gene_symbol_column}{(Required if nm_id_column = NA) The column number describing gene symbol in input_file (Default=NA).}

\item{mate_id_column}{(Required) The column indicating mateIDs or svIDs such as "SVMERGE1_1" (Default=NA).}

\item{ignore_short}{Ignore to output results of short peptide less than min (peptide_length)}
}
\value{
void (Calculated Neoantigen Files will be generated as .tsv files.):

HLA: HLA type used to calculate neoantigen.

Pos: The position of a fraction of peptide used to be evaluated from the full-length peptide.

Gene Gene symbol used to be evaluated in NetMHCpan.

Evaluated_Mutant_Peptide: The mutant peptide to be evaluated.

Evaluated_Mutant_Peptide_Core: The core peptide of the mutant peptide to be evaluated in NetMHCpan.

Mut_IC50: IC50 value for evaluated mutant peptide.

Mut_Rank: Rank value for evaluated mutanat peptide.

Chr: Chromosome Number of the mutation.

NM_ID: NM_ID used to construct peptides from the mutation.

Change: The annotation to be described in .vcf file.

Ref: reference type nucleic acid base.

Alt: alternative type nucleic acid base.

Prob: A probability of reference nucleic acid base described in .vcf file.

Mutation_Prob: A probability of alternative nucleic acid base described in .vcf file.

Exon_Start: The exon start position of the corrsponding NM_ID.

Exon_End: The exon end position of the corrsponding NM_ID.

Mutation_Position: The mutation position of the corrsponding NM_ID.

Total_Depth: The sum depth of the reference and alternative nucleic acid base.

Tumor_Depth: The depth of the alternative nucleic acid base.

Wt_Peptide: The full-length of the wild-type peptide.

Mutant_Peptide: The full-length of the mutant peptide.

Total_RNA: The expression amount of the corresponding RNA.

Tumor_RNA_Ratio: The variant allele frequency of the corresponding RNA.

Tumor_RNA: The modified amount of the corresponding RNA level based on RNA Reads.

Tumor_RNA_based_on_DNA: The modified amount of the corresponding RNA level based on DNA Reads.

MutRatio: The mean value of the cancer cell fraction probability.

MutRatio_Min: The 1\% percentile of the cancer cell fraction probability.

MutRatio_Max: The 99\% percentile of the cancer cell fraction probability.

P_I: Priority score using the IC50.
Please use CalculatePriorityScores <- function(result, useRNAvaf = FALSE)

P_R: Priority score using the percentage of rank affinity.
Please use CalculatePriorityScores <- function(result, useRNAvaf = FALSE)

P: Priority score implemented in MuPeXI (Bjerregaard et al. 2017).
Please use CalculatePriorityScores <- function(result, useRNAvaf = FALSE)
}
\description{
Calculate Neoantigen Candidates on SV fusions for MHC Class1
}
